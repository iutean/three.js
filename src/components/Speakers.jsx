/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useGSAP } from '@gsap/react';
import gsap from 'gsap';

gsap.registerPlugin(useGSAP);

useGLTF.preload('/models/speakers.glb')

const Model = (props) => {
    const speakersRef = useRef();
    const { nodes, materials } = useGLTF('/models/speakers.glb')
    
    useGSAP(() => {
        gsap.to(speakersRef.current.rotation, {  // Changed from speakersRef to headsetRef
            z: -Math.PI / 4,
            duration: 4,
            ease: "power1.inOut",
            yoyo: true,
            repeat: -1,
            startAt: { z: -Math.PI / 8 }
        });
        gsap.to(speakersRef.current.position, {
            y: 0.03,
            duration: 2.66666,
            ease: "power1.inOut",
            yoyo: true,
            repeat: -1,
        });
    });

    return (
        <group {...props} dispose={null}>
            <group ref={speakersRef} rotation={[-Math.PI / 2, 0, 0]}>  // Added ref here
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_2.geometry}
                    material={materials.Logo}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_3.geometry}
                    material={materials.SubWoof}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_4.geometry}
                    material={materials.Woof}
                />
            </group>
        </group>
    )
}
export default Model;